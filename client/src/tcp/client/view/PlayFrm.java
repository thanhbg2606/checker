/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcp.client.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import model.ObjectWrapper;
import model.Room;
import model.User;
import rmi.client.control.ClientRMICtr;
import tcp.client.control.ClientCtr;

/**
 *
 * @author PC
 */
public class PlayFrm extends javax.swing.JFrame{

    /**
     * Creates new form PlayFrm
     */
    
    private ClientRMICtr myRMI;
    private DefaultTableModel modelRoom;
    private ClientCtr mySocket;
    private ArrayList<Room> listRoom;
    private PlayFrm play;
    private User user;
    
    public PlayFrm(){
        
    }
    
    public PlayFrm(ClientRMICtr rmi, ClientCtr socket, User u) {
        super("Home");
        play = this;
        myRMI = rmi;
        mySocket = socket;     
        user = u;
        
        initComponents();
        
//        btnAddRoom.addActionListener(this);
//        btnSearchRoom.addActionListener(this);
        
        
        listRoom = new ArrayList<>();
        modelRoom = (DefaultTableModel) tblRoom.getModel();
        
        ShowListRoom();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAddRoom = new javax.swing.JButton();
        btnSearchRoom = new javax.swing.JButton();
        txtSearchRoom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Phòng", "Tên Phòng", "Tình Trạng", "Số Người Chơi"
            }
        ));
        jScrollPane1.setViewportView(tblRoom);

        jLabel1.setText("Danh sách các phòng");

        btnAddRoom.setText("Tạo Phòng");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnSearchRoom.setText("Tìm phòng:");
        btnSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomActionPerformed(evt);
            }
        });

        txtSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearchRoom)
                                .addGap(29, 29, 29)
                                .addComponent(txtSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddRoom)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel1)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchRoom)
                    .addComponent(txtSearchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddRoom)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        // TODO add your handling code here:
        for(ObjectWrapper func: mySocket.getActiveFunction())
                    if(func.getData() instanceof RoomFrm) {
                        ((RoomFrm)func.getData()).setVisible(true);
                        return;
                    }
                RoomFrm p = new RoomFrm(myRMI,mySocket,user);
                p.setVisible(true);
        
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void txtSearchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchRoomActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtSearchRoomActionPerformed

    private void btnSearchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRoomActionPerformed
        // TODO add your handling code here:
        String string = txtSearchRoom.getText();
        listRoom = myRMI.getRoom(string);
            
            ObjectWrapper ob = new ObjectWrapper();
            ob.setPerformative(ObjectWrapper.REPLY_DISPLAY_ROOM);
            ob.setData(listRoom);
            
            receivedDataProcessing(ob);
    }//GEN-LAST:event_btnSearchRoomActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnSearchRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtSearchRoom;
    // End of variables declaration//GEN-END:variables
    
    
    public void ShowListRoom(){
        String string = "";
        listRoom = myRMI.getRoom(string);
            
            ObjectWrapper ob = new ObjectWrapper();
            ob.setPerformative(ObjectWrapper.REPLY_DISPLAY_ROOM);
            ob.setData(listRoom);
            
            receivedDataProcessing(ob);
    }
    
    public void receivedDataProcessing(ObjectWrapper data) {
        
        if (data.getData() instanceof ArrayList<?> 
                && data.getPerformative() == ObjectWrapper.REPLY_DISPLAY_ROOM){
            listRoom = (ArrayList<Room>)data.getData();
            String[] columnNames = {"Mã Phòng", "Tên Phòng", "Tình Trạng","Số Người Chơi"};
            String[][] value = new String[listRoom.size()][columnNames.length];
            for(int i=0; i<listRoom.size(); i++){
                value[i][0] = listRoom.get(i).getRoomCode()+"";
                value[i][1] = listRoom.get(i).getRoomName();
                value[i][2] = listRoom.get(i).getDescription()+ "";
                value[i][3] = listRoom.get(i).getQuantity()+"";
                
            }
            DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
                @Override
                public boolean isCellEditable(int row, int column) {
                   //unable to edit cells
                   return false;
                }
            };
            
            
            for(Room r : listRoom){
                modelRoom.addRow(new Object[]{
                r.getRoomCode(),
                r.getRoomName(),
                r.getDescription(),
                r.getQuantity(),
                
                });
            }
            tblRoom.setModel(tableModel);
        }
        
       

    }    

//    @Override
//    public void actionPerformed(ActionEvent e) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
}
